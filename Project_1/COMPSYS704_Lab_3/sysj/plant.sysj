import run.GUI;
import run.POS_GUI;

Plant(
		input signal capOnBottleAtPos1, tableAlignedWithSensor, bottleAtPos1, bottleAtPos2, bottleAtPos3, bottleAtPos4, bottleAtPos5;
		input signal rotate;
		input String channel liquidMixOutput;
		input int channel bottleQuantityOutput;
		output signal capOnPos1, tableAligned, botPos1, botPos2, botPos3, botPos4, botPos5;
		output signal conBeltTriggerE, fillerTriggerE, lidloaderTriggerE, capScrewTriggerE, labelTriggerE;
		output Boolean channel orderDoneFlag;
		)
->
{
	new Thread(new GUI()).start();

	{// 
		
		while(true){
			
			// Get number of bottles ordered
			Integer bottles = 0;
			System.out.println("Before Quantity");
			receive bottleQuantityOutput;
			bottles = (Integer)#bottleQuantityOutput;
			System.out.println(bottles);
			Integer bottlesDone = 0;
			
			while(bottlesDone != bottles){
				abort(rotate){
					while(true) {
						emit botPos1;
						emit tableAligned;
						pause;
					}
				}
				abort(bottleAtPos1 && rotate){
				waitl(2s);
					while(true) {
						//System.out.println("bottleAtPos1 aborted");
						emit botPos2;
						pause;
					}
				}
				
				abort(bottleAtPos2 && rotate){
					waitl(2s);
					while(true) {
						emit botPos3;
						pause;
					}
				}
	
				abort(bottleAtPos3 && rotate){
					waitl(2s);
					while(true) {
						emit botPos4;
						pause;
					}
				}
	
				abort(bottleAtPos4 && rotate){
				  	waitl(2s);
					while(true) {
						emit botPos5;
						pause;
					}
				}
	
				abort(bottleAtPos5 && rotate){
					waitl(2s);
					emit tableAligned;
					bottlesDone++;
					System.out.println(bottlesDone);
				}
			
			
			pause;
			}
			pause;
		}
	}
	||
	{// To viz
		{while(true){present(botPos1){emit conBeltTriggerE;} pause;}}
		||
		{while(true){present(botPos2){emit fillerTriggerE;} pause;}}
		||
		{while(true){present(botPos3){emit lidloaderTriggerE;} pause;}}
		||
		{while(true){present(botPos4){emit capScrewTriggerE;} pause;}}
		||
		{while(true){present(botPos5){emit labelTriggerE;} pause;}}
	}
	
}


POS_Plant(
		input signal orderStart;
		input Boolean channel orderDoneFlag;
		
		input String signal liquidMix;
		input Integer signal bottleQuantity;
		
		output signal orderDoneGUIFlag;
		output String channel liquidMixOutput;
		output int channel bottleQuantityOutput;
		
		)
->
{
	new Thread(new POS_GUI()).start();

	{// 
		while(true){
			present(orderStart){
				Integer y;
				String x; 
				
				y = #bottleQuantity;
				x = #liquidMix; 
				
				System.out.println("Bottle Quantity: " + y);
				System.out.println("Liquid Mix: " + x);
				send liquidMixOutput(liquidMix);
				send bottleQuantityOutput( y);
				}
			pause;
		}
	}	
	||
	{// To viz
	}
	
}